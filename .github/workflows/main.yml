name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.205'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build project
      run: dotnet build --no-restore

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.205'

    - name: Restore dependencies
      run: dotnet restore

    - name: Run unit tests with coverage
      run: |
        dotnet test --collect:"XPlat Code Coverage" --logger trx
      env:
        PATH: ${{ runner.tool_cache }}/dotnet-tools/:$PATH

    - name: Install ReportGenerator tool
      run: dotnet tool install --global dotnet-reportgenerator-globaltool
      env:
        PATH: ${{ runner.tool_cache }}/dotnet-tools/:$PATH

    - name: Generate coverage report
      run: |
        reportgenerator -reports:"**/coverage.cobertura.xml" -targetdir:"coverage-report" -reporttypes:Html
      env:
        PATH: ${{ runner.tool_cache }}/dotnet-tools/:$PATH

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage-report

  code-quality:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.205'

    - name: Install dotnet-format tool
      run: dotnet tool install -g dotnet-format

    - name: Run code quality checks
      run: dotnet format --check

    - name: Check coverage
      run: |
        coverage_percentage=$(grep -oP 'Total Line Coverage: \K[0-9]+' coverage-report/index.htm || echo "0")
        if [ "$coverage_percentage" -lt 90 ]; then
          echo "Test coverage is below 90%."
          exit 1
        fi
